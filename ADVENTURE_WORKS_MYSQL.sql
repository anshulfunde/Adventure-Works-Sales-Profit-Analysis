CREATE DATABASE ADVENTURE_WORKS;

USE ADVENTURE_WORKS;

-- APPEND OF SALES TABLE
CREATE TABLE SALES AS
SELECT * FROM FACT_INTERNET_SALES_NEW
UNION ALL
SELECT * FROM FACTINTERNETSALES ;

ALTER TABLE sales 
ADD COLUMN profit varchar(50);

SET SQL_SAFE_UPDATES=0;

UPDATE sales 
SET profit = SALESAMOUNT-TOTALPRODUCTCOST;


ALTER TABLE DIMDATE
RENAME COLUMN  ï»¿DateKey TO DATEKEY;

ALTER TABLE DIMSALESTERRITORY
RENAME COLUMN  ï»¿SalesTerritoryKey TO SalesTerritoryKey;

ALTER TABLE DIMCUSTOMER
RENAME COLUMN  ï»¿CustomerKey TO CustomerKey;

ALTER TABLE DIMPRODUCT
RENAME COLUMN  ï»¿ProductKey TO ProductKey;

ALTER TABLE SALES
RENAME COLUMN  ï»¿ProductKey TO ProductKey;

USE ADVENTURE_WORKS;

-- KPI'S 
-- TOTAL SALES
SELECT CONCAT(ROUND(SUM(SALESAMOUNT)/1000000,2),"M") AS TOTAL_SALES 
FROM SALES;

-- TOTAL PROFIT
SELECT CONCAT(ROUND(SUM(profit)/1000000,2),"M") AS TOTALPROFIT
FROM SALES;

-- TOTAL PRODUCTION COST
SELECT CONCAT(ROUND(SUM(TOTALPRODUCTCOST)/1000000,2),"M") AS TOTALPRODUCTCOST
FROM SALES;

-- TOTAL ORDER COUNT
SELECT CONCAT(ROUND(COUNT(DISTINCT CUSTOMERKEY)/1000,2),"K") AS TOTAL_ORDER_COUNT
FROM SALES;

-- TOTAL QUANTITY
SELECT CONCAT(ROUND(SUM(ORDERQUANTITY)/1000,2),"K") AS TOTAL_ORDER_QUANTITY
FROM SALES;

-- Visualizations 
-- MONTH WISE SALES
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.SALESAMOUNT),2) AS TOTALSALES
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.SALESAMOUNT) DESC ;

-- MONTH WISE PROFIT
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.PROFIT),2) AS TOTALPROFIT
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.PROFIT) DESC ;

-- QUARTER WISE SALES
SELECT concat("QTR-",A.CalendarQuarter) AS QUARTER, ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMDATE AS A 
JOIN SALES AS B 
ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.CALENDARQUARTER
ORDER BY QUARTER;

-- QUARTER WISE PROFIT
SELECT concat("QTR-",A.CalendarQuarter) AS QUARTER, ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMDATE AS A 
JOIN SALES AS B 
ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.CALENDARQUARTER
ORDER BY QUARTER;

-- YEAR WISE SALES 
SELECT A.CalendarYear AS YEAR, ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMDATE AS A 
JOIN SALES AS B 
ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.CALENDARYEAR
ORDER BY A.CalendarYear;

-- YEAR WISE PROFIT 
SELECT A.CalendarYear AS YEAR, ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMDATE AS A 
JOIN SALES AS B 
ON A.DATEKEY=B.ORDERDATEKEY
GROUP BY A.CALENDARYEAR
ORDER BY A.CalendarYear;

-- COUNTRY WISE SALES
SELECT A.SalesTerritoryCountry AS COUNTRY , ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMSalesTerritory AS A
JOIN SALES AS B
ON A.SalesTerritoryKey=B.SalesTerritoryKey
GROUP BY A.SalesTerritoryCountry
ORDER BY TOTAL_SALES DESC;

-- COUNTRY WISE PROFIT
SELECT A.SalesTerritoryCountry AS COUNTRY , ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMSalesTerritory AS A
JOIN SALES AS B
ON A.SalesTerritoryKey=B.SalesTerritoryKey
GROUP BY A.SalesTerritoryCountry
ORDER BY TOTAL_PROFIT DESC;

-- GENDER WISE SALES 
SELECT A.GENDER  , ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CustomerKey=B.CustomerKey
GROUP BY A.GENDER
ORDER BY TOTAL_SALES DESC;

-- GENDER WISE PROFIT
SELECT A.GENDER  , ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CustomerKey=B.CustomerKey
GROUP BY A.GENDER
ORDER BY TOTAL_PROFIT DESC;

-- TOP 10 PRODUCT BY SALES 
SELECT A.EnglishProductName ,ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMPRODUCT AS A
JOIN SALES AS B
ON A.PRODUCTKEY=B.PRODUCTKEY
GROUP BY A.EnglishProductName
ORDER BY TOTAL_SALES DESC
LIMIT 10;


-- TOP 10 PRODUCT BY PROFIT   
SELECT A.EnglishProductName ,ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMPRODUCT AS A
JOIN SALES AS B
ON A.PRODUCTKEY=B.PRODUCTKEY
GROUP BY A.EnglishProductName
ORDER BY TOTAL_PROFIT DESC
LIMIT 10;

-- BOTTTOM 10 PRODUCT BY SALES    
SELECT A.EnglishProductName ,ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMPRODUCT AS A
JOIN SALES AS B
ON A.PRODUCTKEY=B.PRODUCTKEY
GROUP BY A.EnglishProductName
ORDER BY TOTAL_SALES ASC
LIMIT 10;

-- BOTTTOM 10 PRODUCT BY PROFIT    
SELECT A.EnglishProductName ,ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMPRODUCT AS A
JOIN SALES AS B
ON A.PRODUCTKEY=B.PRODUCTKEY
GROUP BY A.EnglishProductName
ORDER BY TOTAL_PROFIT ASC
LIMIT 10;

-- TOP 10 CUSTOMERS BY SALES 
SELECT A.FIRSTNAME AS NAME ,ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CUSTOMERKEY=B.CUSTOMERKEY
GROUP BY A.FIRSTNAME
ORDER BY TOTAL_SALES DESC
LIMIT 10;

-- TOP 10 CUSTOMERS BY PROFIT 
SELECT A.FIRSTNAME AS NAME ,ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CUSTOMERKEY=B.CUSTOMERKEY
GROUP BY A.FIRSTNAME
ORDER BY TOTAL_PROFIT DESC
LIMIT 10;

-- BOTTOM 10 CUSTOMERS BY SALES 
SELECT A.FIRSTNAME AS NAME ,ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CUSTOMERKEY=B.CUSTOMERKEY
GROUP BY A.FIRSTNAME
ORDER BY TOTAL_SALES 
LIMIT 10;

-- BOTTOM 10 CUSTOMERS BY PROFIT 
SELECT A.FIRSTNAME AS NAME ,ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMCUSTOMER AS A
JOIN SALES AS B
ON A.CUSTOMERKEY=B.CUSTOMERKEY
GROUP BY A.FIRSTNAME
ORDER BY TOTAL_PROFIT 
LIMIT 10;

-- REGION WISE SALES
SELECT A.SalesTerritoryRegion AS REGION ,ROUND(SUM(B.SALESAMOUNT),2) AS TOTAL_SALES
FROM DIMSALESTERRITORY AS A
JOIN SALES AS B
ON A.SalesTerritoryKey=B.SalesTerritoryKey
GROUP BY A.SalesTerritoryRegion
ORDER BY TOTAL_SALES DESC;

-- REGION WISE PROFIT
SELECT A.SalesTerritoryRegion AS REGION ,ROUND(SUM(B.PROFIT),2) AS TOTAL_PROFIT
FROM DIMSALESTERRITORY AS A
JOIN SALES AS B
ON A.SalesTerritoryKey=B.SalesTerritoryKey
GROUP BY A.SalesTerritoryRegion
ORDER BY TOTAL_PROFIT DESC;

-- SLICER (To filter results based on Quarter,Month,Year,Country ,
-- we can use the WHERE clause in our queries. Below are some examples demonstrating its usage :-

-- MONTH filter
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.SALESAMOUNT),2) AS TOTALSALES
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
WHERE A.ENGLISHMONTHNAME = "JANUARY" -- (SALES FOR JANUARY MONTH)
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.SALESAMOUNT) DESC ;

-- QUARTER FILTER 
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.SALESAMOUNT),2) AS TOTALSALES
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
WHERE A.CalendarQuarter =1  -- (SALES FOR 1ST QUARTER)
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.SALESAMOUNT) DESC ;

-- YEAR FILTER
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.SALESAMOUNT),2) AS TOTALSALES
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
WHERE A.CalendarYear =2013  -- (SALES FOR YEAR 2013)
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.SALESAMOUNT) DESC ;

-- COUNTRY FILTER
SELECT A.ENGLISHMONTHNAME AS MONTH_NAME , ROUND(SUM(B.SALESAMOUNT),2) AS TOTALSALES
FROM DIMDATE AS A
JOIN SALES AS B ON A.DATEKEY=B.ORDERDATEKEY
JOIN DIMSALESTERRITORY AS C  ON B.SalesTerritoryKey=C.SalesTerritoryKey
WHERE C.SalesTerritoryCountry = "CANADA"  -- (MONTH WISE SALES FOR CANADA COUNTRY)
GROUP BY A.ENGLISHMONTHNAME
ORDER BY SUM(B.SALESAMOUNT) DESC ;